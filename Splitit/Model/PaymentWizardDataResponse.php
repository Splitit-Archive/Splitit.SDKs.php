<?php
/**
 * PaymentWizardDataResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  SplititSdkClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.14
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace SplititSdkClient\Model;

use \ArrayAccess;
use \SplititSdkClient\ObjectSerializer;

/**
 * PaymentWizardDataResponse Class Doc Comment
 *
 * @category Class
 * @package  SplititSdkClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PaymentWizardDataResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PaymentWizardDataResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'requested_number_of_installments' => 'string',
        'success_exit_url' => 'string',
        'error_exit_url' => 'string',
        'cancel_exit_url' => 'string',
        'success_async_url' => 'string',
        'view_name' => 'string',
        'is_opened_in_iframe' => 'bool',
        'is3d_secure_in_popup' => 'bool',
        'payment_form_message' => 'string',
        'set_short_url' => 'bool',
        'show_address_elements' => 'string',
        'currency_display' => '\SplititSdkClient\Model\ExtendedCurrency',
        'force_display_important_notes' => 'bool',
        'show_shopper_details_expended_on_start' => 'bool',
        'show_payment_schedule_required_credit' => 'bool',
        'is_shopper_email_mandatory' => 'bool',
        'is_shopper_phone_mandatory' => 'bool',
        'number_of_installments_selections_option' => 'string',
        'is3ds2_supported' => 'bool',
        'processor_name' => 'string',
        'address_is_readonly' => 'bool',
        'phone_is_read_only' => 'bool',
        'email_is_read_only' => 'bool',
        'show_learn_more' => 'bool',
        'show_mobile_phone' => 'bool',
        'show_close_dialog_before_abandon' => 'bool',
        'logo_url' => 'string',
        'default_num_of_installments' => 'int',
        'privacy_policy_url' => 'string',
        'terms_and_conditions_url' => 'string',
        'learn_more_url' => 'string',
        'potential_card_types' => '\SplititSdkClient\Model\CardType[]',
        'potential_card_brands' => '\SplititSdkClient\Model\CardBrand[]',
        'payment_form_messages' => '\SplititSdkClient\Model\PaymentFormMessage[]',
        'display_properties' => 'map[string,string]',
        'terms_and_conditions' => '\SplititSdkClient\Model\TermsAndConditions',
        'payment_methods' => '\SplititSdkClient\Model\PaymentMethods[]',
        'status' => '\SplititSdkClient\Model\InstallmentPlanStatus',
        'is_attempt3_dsecure' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'requested_number_of_installments' => null,
        'success_exit_url' => null,
        'error_exit_url' => null,
        'cancel_exit_url' => null,
        'success_async_url' => null,
        'view_name' => null,
        'is_opened_in_iframe' => null,
        'is3d_secure_in_popup' => null,
        'payment_form_message' => null,
        'set_short_url' => null,
        'show_address_elements' => null,
        'currency_display' => null,
        'force_display_important_notes' => null,
        'show_shopper_details_expended_on_start' => null,
        'show_payment_schedule_required_credit' => null,
        'is_shopper_email_mandatory' => null,
        'is_shopper_phone_mandatory' => null,
        'number_of_installments_selections_option' => null,
        'is3ds2_supported' => null,
        'processor_name' => null,
        'address_is_readonly' => null,
        'phone_is_read_only' => null,
        'email_is_read_only' => null,
        'show_learn_more' => null,
        'show_mobile_phone' => null,
        'show_close_dialog_before_abandon' => null,
        'logo_url' => null,
        'default_num_of_installments' => 'int32',
        'privacy_policy_url' => null,
        'terms_and_conditions_url' => null,
        'learn_more_url' => null,
        'potential_card_types' => null,
        'potential_card_brands' => null,
        'payment_form_messages' => null,
        'display_properties' => null,
        'terms_and_conditions' => null,
        'payment_methods' => null,
        'status' => null,
        'is_attempt3_dsecure' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'requested_number_of_installments' => 'RequestedNumberOfInstallments',
        'success_exit_url' => 'SuccessExitURL',
        'error_exit_url' => 'ErrorExitURL',
        'cancel_exit_url' => 'CancelExitURL',
        'success_async_url' => 'SuccessAsyncUrl',
        'view_name' => 'ViewName',
        'is_opened_in_iframe' => 'IsOpenedInIframe',
        'is3d_secure_in_popup' => 'Is3dSecureInPopup',
        'payment_form_message' => 'PaymentFormMessage',
        'set_short_url' => 'SetShortUrl',
        'show_address_elements' => 'ShowAddressElements',
        'currency_display' => 'CurrencyDisplay',
        'force_display_important_notes' => 'ForceDisplayImportantNotes',
        'show_shopper_details_expended_on_start' => 'ShowShopperDetailsExpendedOnStart',
        'show_payment_schedule_required_credit' => 'ShowPaymentScheduleRequiredCredit',
        'is_shopper_email_mandatory' => 'IsShopperEmailMandatory',
        'is_shopper_phone_mandatory' => 'IsShopperPhoneMandatory',
        'number_of_installments_selections_option' => 'NumberOfInstallmentsSelectionsOption',
        'is3ds2_supported' => 'Is3ds2Supported',
        'processor_name' => 'ProcessorName',
        'address_is_readonly' => 'AddressIsReadonly',
        'phone_is_read_only' => 'PhoneIsReadOnly',
        'email_is_read_only' => 'EmailIsReadOnly',
        'show_learn_more' => 'ShowLearnMore',
        'show_mobile_phone' => 'ShowMobilePhone',
        'show_close_dialog_before_abandon' => 'ShowCloseDialogBeforeAbandon',
        'logo_url' => 'LogoURL',
        'default_num_of_installments' => 'DefaultNumOfInstallments',
        'privacy_policy_url' => 'PrivacyPolicyUrl',
        'terms_and_conditions_url' => 'TermsAndConditionsUrl',
        'learn_more_url' => 'LearnMoreUrl',
        'potential_card_types' => 'PotentialCardTypes',
        'potential_card_brands' => 'PotentialCardBrands',
        'payment_form_messages' => 'PaymentFormMessages',
        'display_properties' => 'DisplayProperties',
        'terms_and_conditions' => 'TermsAndConditions',
        'payment_methods' => 'PaymentMethods',
        'status' => 'Status',
        'is_attempt3_dsecure' => 'IsAttempt3Dsecure'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'requested_number_of_installments' => 'setRequestedNumberOfInstallments',
        'success_exit_url' => 'setSuccessExitUrl',
        'error_exit_url' => 'setErrorExitUrl',
        'cancel_exit_url' => 'setCancelExitUrl',
        'success_async_url' => 'setSuccessAsyncUrl',
        'view_name' => 'setViewName',
        'is_opened_in_iframe' => 'setIsOpenedInIframe',
        'is3d_secure_in_popup' => 'setIs3dSecureInPopup',
        'payment_form_message' => 'setPaymentFormMessage',
        'set_short_url' => 'setSetShortUrl',
        'show_address_elements' => 'setShowAddressElements',
        'currency_display' => 'setCurrencyDisplay',
        'force_display_important_notes' => 'setForceDisplayImportantNotes',
        'show_shopper_details_expended_on_start' => 'setShowShopperDetailsExpendedOnStart',
        'show_payment_schedule_required_credit' => 'setShowPaymentScheduleRequiredCredit',
        'is_shopper_email_mandatory' => 'setIsShopperEmailMandatory',
        'is_shopper_phone_mandatory' => 'setIsShopperPhoneMandatory',
        'number_of_installments_selections_option' => 'setNumberOfInstallmentsSelectionsOption',
        'is3ds2_supported' => 'setIs3ds2Supported',
        'processor_name' => 'setProcessorName',
        'address_is_readonly' => 'setAddressIsReadonly',
        'phone_is_read_only' => 'setPhoneIsReadOnly',
        'email_is_read_only' => 'setEmailIsReadOnly',
        'show_learn_more' => 'setShowLearnMore',
        'show_mobile_phone' => 'setShowMobilePhone',
        'show_close_dialog_before_abandon' => 'setShowCloseDialogBeforeAbandon',
        'logo_url' => 'setLogoUrl',
        'default_num_of_installments' => 'setDefaultNumOfInstallments',
        'privacy_policy_url' => 'setPrivacyPolicyUrl',
        'terms_and_conditions_url' => 'setTermsAndConditionsUrl',
        'learn_more_url' => 'setLearnMoreUrl',
        'potential_card_types' => 'setPotentialCardTypes',
        'potential_card_brands' => 'setPotentialCardBrands',
        'payment_form_messages' => 'setPaymentFormMessages',
        'display_properties' => 'setDisplayProperties',
        'terms_and_conditions' => 'setTermsAndConditions',
        'payment_methods' => 'setPaymentMethods',
        'status' => 'setStatus',
        'is_attempt3_dsecure' => 'setIsAttempt3Dsecure'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'requested_number_of_installments' => 'getRequestedNumberOfInstallments',
        'success_exit_url' => 'getSuccessExitUrl',
        'error_exit_url' => 'getErrorExitUrl',
        'cancel_exit_url' => 'getCancelExitUrl',
        'success_async_url' => 'getSuccessAsyncUrl',
        'view_name' => 'getViewName',
        'is_opened_in_iframe' => 'getIsOpenedInIframe',
        'is3d_secure_in_popup' => 'getIs3dSecureInPopup',
        'payment_form_message' => 'getPaymentFormMessage',
        'set_short_url' => 'getSetShortUrl',
        'show_address_elements' => 'getShowAddressElements',
        'currency_display' => 'getCurrencyDisplay',
        'force_display_important_notes' => 'getForceDisplayImportantNotes',
        'show_shopper_details_expended_on_start' => 'getShowShopperDetailsExpendedOnStart',
        'show_payment_schedule_required_credit' => 'getShowPaymentScheduleRequiredCredit',
        'is_shopper_email_mandatory' => 'getIsShopperEmailMandatory',
        'is_shopper_phone_mandatory' => 'getIsShopperPhoneMandatory',
        'number_of_installments_selections_option' => 'getNumberOfInstallmentsSelectionsOption',
        'is3ds2_supported' => 'getIs3ds2Supported',
        'processor_name' => 'getProcessorName',
        'address_is_readonly' => 'getAddressIsReadonly',
        'phone_is_read_only' => 'getPhoneIsReadOnly',
        'email_is_read_only' => 'getEmailIsReadOnly',
        'show_learn_more' => 'getShowLearnMore',
        'show_mobile_phone' => 'getShowMobilePhone',
        'show_close_dialog_before_abandon' => 'getShowCloseDialogBeforeAbandon',
        'logo_url' => 'getLogoUrl',
        'default_num_of_installments' => 'getDefaultNumOfInstallments',
        'privacy_policy_url' => 'getPrivacyPolicyUrl',
        'terms_and_conditions_url' => 'getTermsAndConditionsUrl',
        'learn_more_url' => 'getLearnMoreUrl',
        'potential_card_types' => 'getPotentialCardTypes',
        'potential_card_brands' => 'getPotentialCardBrands',
        'payment_form_messages' => 'getPaymentFormMessages',
        'display_properties' => 'getDisplayProperties',
        'terms_and_conditions' => 'getTermsAndConditions',
        'payment_methods' => 'getPaymentMethods',
        'status' => 'getStatus',
        'is_attempt3_dsecure' => 'getIsAttempt3Dsecure'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['requested_number_of_installments'] = isset($data['requested_number_of_installments']) ? $data['requested_number_of_installments'] : null;
        $this->container['success_exit_url'] = isset($data['success_exit_url']) ? $data['success_exit_url'] : null;
        $this->container['error_exit_url'] = isset($data['error_exit_url']) ? $data['error_exit_url'] : null;
        $this->container['cancel_exit_url'] = isset($data['cancel_exit_url']) ? $data['cancel_exit_url'] : null;
        $this->container['success_async_url'] = isset($data['success_async_url']) ? $data['success_async_url'] : null;
        $this->container['view_name'] = isset($data['view_name']) ? $data['view_name'] : null;
        $this->container['is_opened_in_iframe'] = isset($data['is_opened_in_iframe']) ? $data['is_opened_in_iframe'] : null;
        $this->container['is3d_secure_in_popup'] = isset($data['is3d_secure_in_popup']) ? $data['is3d_secure_in_popup'] : null;
        $this->container['payment_form_message'] = isset($data['payment_form_message']) ? $data['payment_form_message'] : null;
        $this->container['set_short_url'] = isset($data['set_short_url']) ? $data['set_short_url'] : null;
        $this->container['show_address_elements'] = isset($data['show_address_elements']) ? $data['show_address_elements'] : null;
        $this->container['currency_display'] = isset($data['currency_display']) ? $data['currency_display'] : null;
        $this->container['force_display_important_notes'] = isset($data['force_display_important_notes']) ? $data['force_display_important_notes'] : null;
        $this->container['show_shopper_details_expended_on_start'] = isset($data['show_shopper_details_expended_on_start']) ? $data['show_shopper_details_expended_on_start'] : null;
        $this->container['show_payment_schedule_required_credit'] = isset($data['show_payment_schedule_required_credit']) ? $data['show_payment_schedule_required_credit'] : null;
        $this->container['is_shopper_email_mandatory'] = isset($data['is_shopper_email_mandatory']) ? $data['is_shopper_email_mandatory'] : null;
        $this->container['is_shopper_phone_mandatory'] = isset($data['is_shopper_phone_mandatory']) ? $data['is_shopper_phone_mandatory'] : null;
        $this->container['number_of_installments_selections_option'] = isset($data['number_of_installments_selections_option']) ? $data['number_of_installments_selections_option'] : null;
        $this->container['is3ds2_supported'] = isset($data['is3ds2_supported']) ? $data['is3ds2_supported'] : null;
        $this->container['processor_name'] = isset($data['processor_name']) ? $data['processor_name'] : null;
        $this->container['address_is_readonly'] = isset($data['address_is_readonly']) ? $data['address_is_readonly'] : null;
        $this->container['phone_is_read_only'] = isset($data['phone_is_read_only']) ? $data['phone_is_read_only'] : null;
        $this->container['email_is_read_only'] = isset($data['email_is_read_only']) ? $data['email_is_read_only'] : null;
        $this->container['show_learn_more'] = isset($data['show_learn_more']) ? $data['show_learn_more'] : null;
        $this->container['show_mobile_phone'] = isset($data['show_mobile_phone']) ? $data['show_mobile_phone'] : null;
        $this->container['show_close_dialog_before_abandon'] = isset($data['show_close_dialog_before_abandon']) ? $data['show_close_dialog_before_abandon'] : null;
        $this->container['logo_url'] = isset($data['logo_url']) ? $data['logo_url'] : null;
        $this->container['default_num_of_installments'] = isset($data['default_num_of_installments']) ? $data['default_num_of_installments'] : null;
        $this->container['privacy_policy_url'] = isset($data['privacy_policy_url']) ? $data['privacy_policy_url'] : null;
        $this->container['terms_and_conditions_url'] = isset($data['terms_and_conditions_url']) ? $data['terms_and_conditions_url'] : null;
        $this->container['learn_more_url'] = isset($data['learn_more_url']) ? $data['learn_more_url'] : null;
        $this->container['potential_card_types'] = isset($data['potential_card_types']) ? $data['potential_card_types'] : null;
        $this->container['potential_card_brands'] = isset($data['potential_card_brands']) ? $data['potential_card_brands'] : null;
        $this->container['payment_form_messages'] = isset($data['payment_form_messages']) ? $data['payment_form_messages'] : null;
        $this->container['display_properties'] = isset($data['display_properties']) ? $data['display_properties'] : null;
        $this->container['terms_and_conditions'] = isset($data['terms_and_conditions']) ? $data['terms_and_conditions'] : null;
        $this->container['payment_methods'] = isset($data['payment_methods']) ? $data['payment_methods'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['is_attempt3_dsecure'] = isset($data['is_attempt3_dsecure']) ? $data['is_attempt3_dsecure'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['is_opened_in_iframe'] === null) {
            $invalidProperties[] = "'is_opened_in_iframe' can't be null";
        }
        if ($this->container['set_short_url'] === null) {
            $invalidProperties[] = "'set_short_url' can't be null";
        }
        if ($this->container['force_display_important_notes'] === null) {
            $invalidProperties[] = "'force_display_important_notes' can't be null";
        }
        if ($this->container['show_shopper_details_expended_on_start'] === null) {
            $invalidProperties[] = "'show_shopper_details_expended_on_start' can't be null";
        }
        if ($this->container['show_payment_schedule_required_credit'] === null) {
            $invalidProperties[] = "'show_payment_schedule_required_credit' can't be null";
        }
        if ($this->container['is_shopper_email_mandatory'] === null) {
            $invalidProperties[] = "'is_shopper_email_mandatory' can't be null";
        }
        if ($this->container['is_shopper_phone_mandatory'] === null) {
            $invalidProperties[] = "'is_shopper_phone_mandatory' can't be null";
        }
        if ($this->container['is3ds2_supported'] === null) {
            $invalidProperties[] = "'is3ds2_supported' can't be null";
        }
        if ($this->container['address_is_readonly'] === null) {
            $invalidProperties[] = "'address_is_readonly' can't be null";
        }
        if ($this->container['phone_is_read_only'] === null) {
            $invalidProperties[] = "'phone_is_read_only' can't be null";
        }
        if ($this->container['email_is_read_only'] === null) {
            $invalidProperties[] = "'email_is_read_only' can't be null";
        }
        if ($this->container['show_learn_more'] === null) {
            $invalidProperties[] = "'show_learn_more' can't be null";
        }
        if ($this->container['show_mobile_phone'] === null) {
            $invalidProperties[] = "'show_mobile_phone' can't be null";
        }
        if ($this->container['show_close_dialog_before_abandon'] === null) {
            $invalidProperties[] = "'show_close_dialog_before_abandon' can't be null";
        }
        if ($this->container['default_num_of_installments'] === null) {
            $invalidProperties[] = "'default_num_of_installments' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['is_attempt3_dsecure'] === null) {
            $invalidProperties[] = "'is_attempt3_dsecure' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets requested_number_of_installments
     *
     * @return string
     */
    public function getRequestedNumberOfInstallments()
    {
        return $this->container['requested_number_of_installments'];
    }

    /**
     * Sets requested_number_of_installments
     *
     * @param string $requested_number_of_installments requested_number_of_installments
     *
     * @return $this
     */
    public function setRequestedNumberOfInstallments($requested_number_of_installments)
    {
        $this->container['requested_number_of_installments'] = $requested_number_of_installments;

        return $this;
    }

    /**
     * Gets success_exit_url
     *
     * @return string
     */
    public function getSuccessExitUrl()
    {
        return $this->container['success_exit_url'];
    }

    /**
     * Sets success_exit_url
     *
     * @param string $success_exit_url success_exit_url
     *
     * @return $this
     */
    public function setSuccessExitUrl($success_exit_url)
    {
        $this->container['success_exit_url'] = $success_exit_url;

        return $this;
    }

    /**
     * Gets error_exit_url
     *
     * @return string
     */
    public function getErrorExitUrl()
    {
        return $this->container['error_exit_url'];
    }

    /**
     * Sets error_exit_url
     *
     * @param string $error_exit_url error_exit_url
     *
     * @return $this
     */
    public function setErrorExitUrl($error_exit_url)
    {
        $this->container['error_exit_url'] = $error_exit_url;

        return $this;
    }

    /**
     * Gets cancel_exit_url
     *
     * @return string
     */
    public function getCancelExitUrl()
    {
        return $this->container['cancel_exit_url'];
    }

    /**
     * Sets cancel_exit_url
     *
     * @param string $cancel_exit_url cancel_exit_url
     *
     * @return $this
     */
    public function setCancelExitUrl($cancel_exit_url)
    {
        $this->container['cancel_exit_url'] = $cancel_exit_url;

        return $this;
    }

    /**
     * Gets success_async_url
     *
     * @return string
     */
    public function getSuccessAsyncUrl()
    {
        return $this->container['success_async_url'];
    }

    /**
     * Sets success_async_url
     *
     * @param string $success_async_url success_async_url
     *
     * @return $this
     */
    public function setSuccessAsyncUrl($success_async_url)
    {
        $this->container['success_async_url'] = $success_async_url;

        return $this;
    }

    /**
     * Gets view_name
     *
     * @return string
     */
    public function getViewName()
    {
        return $this->container['view_name'];
    }

    /**
     * Sets view_name
     *
     * @param string $view_name view_name
     *
     * @return $this
     */
    public function setViewName($view_name)
    {
        $this->container['view_name'] = $view_name;

        return $this;
    }

    /**
     * Gets is_opened_in_iframe
     *
     * @return bool
     */
    public function getIsOpenedInIframe()
    {
        return $this->container['is_opened_in_iframe'];
    }

    /**
     * Sets is_opened_in_iframe
     *
     * @param bool $is_opened_in_iframe is_opened_in_iframe
     *
     * @return $this
     */
    public function setIsOpenedInIframe($is_opened_in_iframe)
    {
        $this->container['is_opened_in_iframe'] = $is_opened_in_iframe;

        return $this;
    }

    /**
     * Gets is3d_secure_in_popup
     *
     * @return bool
     */
    public function getIs3dSecureInPopup()
    {
        return $this->container['is3d_secure_in_popup'];
    }

    /**
     * Sets is3d_secure_in_popup
     *
     * @param bool $is3d_secure_in_popup is3d_secure_in_popup
     *
     * @return $this
     */
    public function setIs3dSecureInPopup($is3d_secure_in_popup)
    {
        $this->container['is3d_secure_in_popup'] = $is3d_secure_in_popup;

        return $this;
    }

    /**
     * Gets payment_form_message
     *
     * @return string
     */
    public function getPaymentFormMessage()
    {
        return $this->container['payment_form_message'];
    }

    /**
     * Sets payment_form_message
     *
     * @param string $payment_form_message payment_form_message
     *
     * @return $this
     */
    public function setPaymentFormMessage($payment_form_message)
    {
        $this->container['payment_form_message'] = $payment_form_message;

        return $this;
    }

    /**
     * Gets set_short_url
     *
     * @return bool
     */
    public function getSetShortUrl()
    {
        return $this->container['set_short_url'];
    }

    /**
     * Sets set_short_url
     *
     * @param bool $set_short_url set_short_url
     *
     * @return $this
     */
    public function setSetShortUrl($set_short_url)
    {
        $this->container['set_short_url'] = $set_short_url;

        return $this;
    }

    /**
     * Gets show_address_elements
     *
     * @return string
     */
    public function getShowAddressElements()
    {
        return $this->container['show_address_elements'];
    }

    /**
     * Sets show_address_elements
     *
     * @param string $show_address_elements show_address_elements
     *
     * @return $this
     */
    public function setShowAddressElements($show_address_elements)
    {
        $this->container['show_address_elements'] = $show_address_elements;

        return $this;
    }

    /**
     * Gets currency_display
     *
     * @return \SplititSdkClient\Model\ExtendedCurrency
     */
    public function getCurrencyDisplay()
    {
        return $this->container['currency_display'];
    }

    /**
     * Sets currency_display
     *
     * @param \SplititSdkClient\Model\ExtendedCurrency $currency_display currency_display
     *
     * @return $this
     */
    public function setCurrencyDisplay($currency_display)
    {
        $this->container['currency_display'] = $currency_display;

        return $this;
    }

    /**
     * Gets force_display_important_notes
     *
     * @return bool
     */
    public function getForceDisplayImportantNotes()
    {
        return $this->container['force_display_important_notes'];
    }

    /**
     * Sets force_display_important_notes
     *
     * @param bool $force_display_important_notes force_display_important_notes
     *
     * @return $this
     */
    public function setForceDisplayImportantNotes($force_display_important_notes)
    {
        $this->container['force_display_important_notes'] = $force_display_important_notes;

        return $this;
    }

    /**
     * Gets show_shopper_details_expended_on_start
     *
     * @return bool
     */
    public function getShowShopperDetailsExpendedOnStart()
    {
        return $this->container['show_shopper_details_expended_on_start'];
    }

    /**
     * Sets show_shopper_details_expended_on_start
     *
     * @param bool $show_shopper_details_expended_on_start show_shopper_details_expended_on_start
     *
     * @return $this
     */
    public function setShowShopperDetailsExpendedOnStart($show_shopper_details_expended_on_start)
    {
        $this->container['show_shopper_details_expended_on_start'] = $show_shopper_details_expended_on_start;

        return $this;
    }

    /**
     * Gets show_payment_schedule_required_credit
     *
     * @return bool
     */
    public function getShowPaymentScheduleRequiredCredit()
    {
        return $this->container['show_payment_schedule_required_credit'];
    }

    /**
     * Sets show_payment_schedule_required_credit
     *
     * @param bool $show_payment_schedule_required_credit show_payment_schedule_required_credit
     *
     * @return $this
     */
    public function setShowPaymentScheduleRequiredCredit($show_payment_schedule_required_credit)
    {
        $this->container['show_payment_schedule_required_credit'] = $show_payment_schedule_required_credit;

        return $this;
    }

    /**
     * Gets is_shopper_email_mandatory
     *
     * @return bool
     */
    public function getIsShopperEmailMandatory()
    {
        return $this->container['is_shopper_email_mandatory'];
    }

    /**
     * Sets is_shopper_email_mandatory
     *
     * @param bool $is_shopper_email_mandatory is_shopper_email_mandatory
     *
     * @return $this
     */
    public function setIsShopperEmailMandatory($is_shopper_email_mandatory)
    {
        $this->container['is_shopper_email_mandatory'] = $is_shopper_email_mandatory;

        return $this;
    }

    /**
     * Gets is_shopper_phone_mandatory
     *
     * @return bool
     */
    public function getIsShopperPhoneMandatory()
    {
        return $this->container['is_shopper_phone_mandatory'];
    }

    /**
     * Sets is_shopper_phone_mandatory
     *
     * @param bool $is_shopper_phone_mandatory is_shopper_phone_mandatory
     *
     * @return $this
     */
    public function setIsShopperPhoneMandatory($is_shopper_phone_mandatory)
    {
        $this->container['is_shopper_phone_mandatory'] = $is_shopper_phone_mandatory;

        return $this;
    }

    /**
     * Gets number_of_installments_selections_option
     *
     * @return string
     */
    public function getNumberOfInstallmentsSelectionsOption()
    {
        return $this->container['number_of_installments_selections_option'];
    }

    /**
     * Sets number_of_installments_selections_option
     *
     * @param string $number_of_installments_selections_option number_of_installments_selections_option
     *
     * @return $this
     */
    public function setNumberOfInstallmentsSelectionsOption($number_of_installments_selections_option)
    {
        $this->container['number_of_installments_selections_option'] = $number_of_installments_selections_option;

        return $this;
    }

    /**
     * Gets is3ds2_supported
     *
     * @return bool
     */
    public function getIs3ds2Supported()
    {
        return $this->container['is3ds2_supported'];
    }

    /**
     * Sets is3ds2_supported
     *
     * @param bool $is3ds2_supported is3ds2_supported
     *
     * @return $this
     */
    public function setIs3ds2Supported($is3ds2_supported)
    {
        $this->container['is3ds2_supported'] = $is3ds2_supported;

        return $this;
    }

    /**
     * Gets processor_name
     *
     * @return string
     */
    public function getProcessorName()
    {
        return $this->container['processor_name'];
    }

    /**
     * Sets processor_name
     *
     * @param string $processor_name processor_name
     *
     * @return $this
     */
    public function setProcessorName($processor_name)
    {
        $this->container['processor_name'] = $processor_name;

        return $this;
    }

    /**
     * Gets address_is_readonly
     *
     * @return bool
     */
    public function getAddressIsReadonly()
    {
        return $this->container['address_is_readonly'];
    }

    /**
     * Sets address_is_readonly
     *
     * @param bool $address_is_readonly address_is_readonly
     *
     * @return $this
     */
    public function setAddressIsReadonly($address_is_readonly)
    {
        $this->container['address_is_readonly'] = $address_is_readonly;

        return $this;
    }

    /**
     * Gets phone_is_read_only
     *
     * @return bool
     */
    public function getPhoneIsReadOnly()
    {
        return $this->container['phone_is_read_only'];
    }

    /**
     * Sets phone_is_read_only
     *
     * @param bool $phone_is_read_only phone_is_read_only
     *
     * @return $this
     */
    public function setPhoneIsReadOnly($phone_is_read_only)
    {
        $this->container['phone_is_read_only'] = $phone_is_read_only;

        return $this;
    }

    /**
     * Gets email_is_read_only
     *
     * @return bool
     */
    public function getEmailIsReadOnly()
    {
        return $this->container['email_is_read_only'];
    }

    /**
     * Sets email_is_read_only
     *
     * @param bool $email_is_read_only email_is_read_only
     *
     * @return $this
     */
    public function setEmailIsReadOnly($email_is_read_only)
    {
        $this->container['email_is_read_only'] = $email_is_read_only;

        return $this;
    }

    /**
     * Gets show_learn_more
     *
     * @return bool
     */
    public function getShowLearnMore()
    {
        return $this->container['show_learn_more'];
    }

    /**
     * Sets show_learn_more
     *
     * @param bool $show_learn_more show_learn_more
     *
     * @return $this
     */
    public function setShowLearnMore($show_learn_more)
    {
        $this->container['show_learn_more'] = $show_learn_more;

        return $this;
    }

    /**
     * Gets show_mobile_phone
     *
     * @return bool
     */
    public function getShowMobilePhone()
    {
        return $this->container['show_mobile_phone'];
    }

    /**
     * Sets show_mobile_phone
     *
     * @param bool $show_mobile_phone show_mobile_phone
     *
     * @return $this
     */
    public function setShowMobilePhone($show_mobile_phone)
    {
        $this->container['show_mobile_phone'] = $show_mobile_phone;

        return $this;
    }

    /**
     * Gets show_close_dialog_before_abandon
     *
     * @return bool
     */
    public function getShowCloseDialogBeforeAbandon()
    {
        return $this->container['show_close_dialog_before_abandon'];
    }

    /**
     * Sets show_close_dialog_before_abandon
     *
     * @param bool $show_close_dialog_before_abandon show_close_dialog_before_abandon
     *
     * @return $this
     */
    public function setShowCloseDialogBeforeAbandon($show_close_dialog_before_abandon)
    {
        $this->container['show_close_dialog_before_abandon'] = $show_close_dialog_before_abandon;

        return $this;
    }

    /**
     * Gets logo_url
     *
     * @return string
     */
    public function getLogoUrl()
    {
        return $this->container['logo_url'];
    }

    /**
     * Sets logo_url
     *
     * @param string $logo_url logo_url
     *
     * @return $this
     */
    public function setLogoUrl($logo_url)
    {
        $this->container['logo_url'] = $logo_url;

        return $this;
    }

    /**
     * Gets default_num_of_installments
     *
     * @return int
     */
    public function getDefaultNumOfInstallments()
    {
        return $this->container['default_num_of_installments'];
    }

    /**
     * Sets default_num_of_installments
     *
     * @param int $default_num_of_installments default_num_of_installments
     *
     * @return $this
     */
    public function setDefaultNumOfInstallments($default_num_of_installments)
    {
        $this->container['default_num_of_installments'] = $default_num_of_installments;

        return $this;
    }

    /**
     * Gets privacy_policy_url
     *
     * @return string
     */
    public function getPrivacyPolicyUrl()
    {
        return $this->container['privacy_policy_url'];
    }

    /**
     * Sets privacy_policy_url
     *
     * @param string $privacy_policy_url privacy_policy_url
     *
     * @return $this
     */
    public function setPrivacyPolicyUrl($privacy_policy_url)
    {
        $this->container['privacy_policy_url'] = $privacy_policy_url;

        return $this;
    }

    /**
     * Gets terms_and_conditions_url
     *
     * @return string
     */
    public function getTermsAndConditionsUrl()
    {
        return $this->container['terms_and_conditions_url'];
    }

    /**
     * Sets terms_and_conditions_url
     *
     * @param string $terms_and_conditions_url terms_and_conditions_url
     *
     * @return $this
     */
    public function setTermsAndConditionsUrl($terms_and_conditions_url)
    {
        $this->container['terms_and_conditions_url'] = $terms_and_conditions_url;

        return $this;
    }

    /**
     * Gets learn_more_url
     *
     * @return string
     */
    public function getLearnMoreUrl()
    {
        return $this->container['learn_more_url'];
    }

    /**
     * Sets learn_more_url
     *
     * @param string $learn_more_url learn_more_url
     *
     * @return $this
     */
    public function setLearnMoreUrl($learn_more_url)
    {
        $this->container['learn_more_url'] = $learn_more_url;

        return $this;
    }

    /**
     * Gets potential_card_types
     *
     * @return \SplititSdkClient\Model\CardType[]
     */
    public function getPotentialCardTypes()
    {
        return $this->container['potential_card_types'];
    }

    /**
     * Sets potential_card_types
     *
     * @param \SplititSdkClient\Model\CardType[] $potential_card_types potential_card_types
     *
     * @return $this
     */
    public function setPotentialCardTypes($potential_card_types)
    {
        $this->container['potential_card_types'] = $potential_card_types;

        return $this;
    }

    /**
     * Gets potential_card_brands
     *
     * @return \SplititSdkClient\Model\CardBrand[]
     */
    public function getPotentialCardBrands()
    {
        return $this->container['potential_card_brands'];
    }

    /**
     * Sets potential_card_brands
     *
     * @param \SplititSdkClient\Model\CardBrand[] $potential_card_brands potential_card_brands
     *
     * @return $this
     */
    public function setPotentialCardBrands($potential_card_brands)
    {
        $this->container['potential_card_brands'] = $potential_card_brands;

        return $this;
    }

    /**
     * Gets payment_form_messages
     *
     * @return \SplititSdkClient\Model\PaymentFormMessage[]
     */
    public function getPaymentFormMessages()
    {
        return $this->container['payment_form_messages'];
    }

    /**
     * Sets payment_form_messages
     *
     * @param \SplititSdkClient\Model\PaymentFormMessage[] $payment_form_messages payment_form_messages
     *
     * @return $this
     */
    public function setPaymentFormMessages($payment_form_messages)
    {
        $this->container['payment_form_messages'] = $payment_form_messages;

        return $this;
    }

    /**
     * Gets display_properties
     *
     * @return map[string,string]
     */
    public function getDisplayProperties()
    {
        return $this->container['display_properties'];
    }

    /**
     * Sets display_properties
     *
     * @param map[string,string] $display_properties display_properties
     *
     * @return $this
     */
    public function setDisplayProperties($display_properties)
    {
        $this->container['display_properties'] = $display_properties;

        return $this;
    }

    /**
     * Gets terms_and_conditions
     *
     * @return \SplititSdkClient\Model\TermsAndConditions
     */
    public function getTermsAndConditions()
    {
        return $this->container['terms_and_conditions'];
    }

    /**
     * Sets terms_and_conditions
     *
     * @param \SplititSdkClient\Model\TermsAndConditions $terms_and_conditions terms_and_conditions
     *
     * @return $this
     */
    public function setTermsAndConditions($terms_and_conditions)
    {
        $this->container['terms_and_conditions'] = $terms_and_conditions;

        return $this;
    }

    /**
     * Gets payment_methods
     *
     * @return \SplititSdkClient\Model\PaymentMethods[]
     */
    public function getPaymentMethods()
    {
        return $this->container['payment_methods'];
    }

    /**
     * Sets payment_methods
     *
     * @param \SplititSdkClient\Model\PaymentMethods[] $payment_methods payment_methods
     *
     * @return $this
     */
    public function setPaymentMethods($payment_methods)
    {
        $this->container['payment_methods'] = $payment_methods;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \SplititSdkClient\Model\InstallmentPlanStatus
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \SplititSdkClient\Model\InstallmentPlanStatus $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets is_attempt3_dsecure
     *
     * @return bool
     */
    public function getIsAttempt3Dsecure()
    {
        return $this->container['is_attempt3_dsecure'];
    }

    /**
     * Sets is_attempt3_dsecure
     *
     * @param bool $is_attempt3_dsecure is_attempt3_dsecure
     *
     * @return $this
     */
    public function setIsAttempt3Dsecure($is_attempt3_dsecure)
    {
        $this->container['is_attempt3_dsecure'] = $is_attempt3_dsecure;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset): mixed
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

