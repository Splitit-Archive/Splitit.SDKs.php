<?php
/**
 * TermsAndConditions
 *
 * PHP version 5
 *
 * @category Class
 * @package  SplititSdkClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.14
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace SplititSdkClient\Model;

use \ArrayAccess;
use \SplititSdkClient\ObjectSerializer;

/**
 * TermsAndConditions Class Doc Comment
 *
 * @category Class
 * @package  SplititSdkClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TermsAndConditions implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TermsAndConditions';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'agreement' => 'string',
        'important_note' => 'string',
        'full_content' => 'string',
        'privacy_policy' => 'string',
        'what_you_need_to_know_auth_hold_define' => 'string',
        'what_you_need_to_know_budget_management' => 'string',
        'what_you_need_to_know_card_type_details' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'agreement' => null,
        'important_note' => null,
        'full_content' => null,
        'privacy_policy' => null,
        'what_you_need_to_know_auth_hold_define' => null,
        'what_you_need_to_know_budget_management' => null,
        'what_you_need_to_know_card_type_details' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'agreement' => 'Agreement',
        'important_note' => 'ImportantNote',
        'full_content' => 'FullContent',
        'privacy_policy' => 'PrivacyPolicy',
        'what_you_need_to_know_auth_hold_define' => 'WhatYouNeedToKnow_AuthHoldDefine',
        'what_you_need_to_know_budget_management' => 'WhatYouNeedToKnow_BudgetManagement',
        'what_you_need_to_know_card_type_details' => 'WhatYouNeedToKnow_CardTypeDetails'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'agreement' => 'setAgreement',
        'important_note' => 'setImportantNote',
        'full_content' => 'setFullContent',
        'privacy_policy' => 'setPrivacyPolicy',
        'what_you_need_to_know_auth_hold_define' => 'setWhatYouNeedToKnowAuthHoldDefine',
        'what_you_need_to_know_budget_management' => 'setWhatYouNeedToKnowBudgetManagement',
        'what_you_need_to_know_card_type_details' => 'setWhatYouNeedToKnowCardTypeDetails'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'agreement' => 'getAgreement',
        'important_note' => 'getImportantNote',
        'full_content' => 'getFullContent',
        'privacy_policy' => 'getPrivacyPolicy',
        'what_you_need_to_know_auth_hold_define' => 'getWhatYouNeedToKnowAuthHoldDefine',
        'what_you_need_to_know_budget_management' => 'getWhatYouNeedToKnowBudgetManagement',
        'what_you_need_to_know_card_type_details' => 'getWhatYouNeedToKnowCardTypeDetails'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['agreement'] = isset($data['agreement']) ? $data['agreement'] : null;
        $this->container['important_note'] = isset($data['important_note']) ? $data['important_note'] : null;
        $this->container['full_content'] = isset($data['full_content']) ? $data['full_content'] : null;
        $this->container['privacy_policy'] = isset($data['privacy_policy']) ? $data['privacy_policy'] : null;
        $this->container['what_you_need_to_know_auth_hold_define'] = isset($data['what_you_need_to_know_auth_hold_define']) ? $data['what_you_need_to_know_auth_hold_define'] : null;
        $this->container['what_you_need_to_know_budget_management'] = isset($data['what_you_need_to_know_budget_management']) ? $data['what_you_need_to_know_budget_management'] : null;
        $this->container['what_you_need_to_know_card_type_details'] = isset($data['what_you_need_to_know_card_type_details']) ? $data['what_you_need_to_know_card_type_details'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets agreement
     *
     * @return string
     */
    public function getAgreement()
    {
        return $this->container['agreement'];
    }

    /**
     * Sets agreement
     *
     * @param string $agreement agreement
     *
     * @return $this
     */
    public function setAgreement($agreement)
    {
        $this->container['agreement'] = $agreement;

        return $this;
    }

    /**
     * Gets important_note
     *
     * @return string
     */
    public function getImportantNote()
    {
        return $this->container['important_note'];
    }

    /**
     * Sets important_note
     *
     * @param string $important_note important_note
     *
     * @return $this
     */
    public function setImportantNote($important_note)
    {
        $this->container['important_note'] = $important_note;

        return $this;
    }

    /**
     * Gets full_content
     *
     * @return string
     */
    public function getFullContent()
    {
        return $this->container['full_content'];
    }

    /**
     * Sets full_content
     *
     * @param string $full_content full_content
     *
     * @return $this
     */
    public function setFullContent($full_content)
    {
        $this->container['full_content'] = $full_content;

        return $this;
    }

    /**
     * Gets privacy_policy
     *
     * @return string
     */
    public function getPrivacyPolicy()
    {
        return $this->container['privacy_policy'];
    }

    /**
     * Sets privacy_policy
     *
     * @param string $privacy_policy privacy_policy
     *
     * @return $this
     */
    public function setPrivacyPolicy($privacy_policy)
    {
        $this->container['privacy_policy'] = $privacy_policy;

        return $this;
    }

    /**
     * Gets what_you_need_to_know_auth_hold_define
     *
     * @return string
     */
    public function getWhatYouNeedToKnowAuthHoldDefine()
    {
        return $this->container['what_you_need_to_know_auth_hold_define'];
    }

    /**
     * Sets what_you_need_to_know_auth_hold_define
     *
     * @param string $what_you_need_to_know_auth_hold_define what_you_need_to_know_auth_hold_define
     *
     * @return $this
     */
    public function setWhatYouNeedToKnowAuthHoldDefine($what_you_need_to_know_auth_hold_define)
    {
        $this->container['what_you_need_to_know_auth_hold_define'] = $what_you_need_to_know_auth_hold_define;

        return $this;
    }

    /**
     * Gets what_you_need_to_know_budget_management
     *
     * @return string
     */
    public function getWhatYouNeedToKnowBudgetManagement()
    {
        return $this->container['what_you_need_to_know_budget_management'];
    }

    /**
     * Sets what_you_need_to_know_budget_management
     *
     * @param string $what_you_need_to_know_budget_management what_you_need_to_know_budget_management
     *
     * @return $this
     */
    public function setWhatYouNeedToKnowBudgetManagement($what_you_need_to_know_budget_management)
    {
        $this->container['what_you_need_to_know_budget_management'] = $what_you_need_to_know_budget_management;

        return $this;
    }

    /**
     * Gets what_you_need_to_know_card_type_details
     *
     * @return string
     */
    public function getWhatYouNeedToKnowCardTypeDetails()
    {
        return $this->container['what_you_need_to_know_card_type_details'];
    }

    /**
     * Sets what_you_need_to_know_card_type_details
     *
     * @param string $what_you_need_to_know_card_type_details what_you_need_to_know_card_type_details
     *
     * @return $this
     */
    public function setWhatYouNeedToKnowCardTypeDetails($what_you_need_to_know_card_type_details)
    {
        $this->container['what_you_need_to_know_card_type_details'] = $what_you_need_to_know_card_type_details;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

